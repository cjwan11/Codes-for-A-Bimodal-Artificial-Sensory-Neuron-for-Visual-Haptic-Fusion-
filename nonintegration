%%%%%%%%%this function return two values which are the data matrix for visual and pressure mapping results, respectively

function [amp1 amp2] = nonintegration(lett_pattn,lamda,P,L,N,N_noise,N_total,fg_folds);

[s1,s2,s3,s4]=size(lett_pattn);
N_num=N_total/N_noise;

n=1;

for i=1:s4;
for u=1:N;
    for v=1:N;
        if lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,1,i)==255&&lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,2,i)==0;
           imag1(u,v)=L;imag2(u,v)=P;
        end
        if lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,1,i)==127;
           imag1(u,v)=lamda*L;imag2(u,v)=P;
        end
        if lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,1,i)==0;
           imag1(u,v)=0;imag2(u,v)=P;
        end
        if lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,1,i)==255 && lett_pattn((u-1)*fg_folds+1,(v-1)*fg_folds+1,2,i)==255;
           imag1(u,v)=L;imag2(u,v)=0;
        end
     end
end

for w=1:N;
    for x=1:N;
    ampli1(i,(w-1)*N+x)=imag1(w,x);
    ampli2(i,(w-1)*N+x)=imag2(w,x);
    end    
end

py=N*N;

if mod(i,N_num)>0&&i>=N_num*(n-1)+1&&i<N_num*n+1;
ampli1(i,py+1)=n;
ampli2(i,py+1)=n;
end

if mod(i,N_num)==0;ampli1(i,py+1)=n;ampli2(i,py+1)=n;n=n+1;end
end

amp1=ampli1;%%%visual mapping result
amp2=ampli2;%%%pressure mapping result
end
